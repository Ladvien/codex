//! Test to verify temporal search functionality
//! 
//! This test directly exercises the temporal search logic to understand
//! why insights generation finds 0 memories while what_did_you_remember finds memories.

use chrono::{Duration, Utc};
use codex_memory::memory::{DateRange, MemoryRepository, SearchRequest, SearchType};

#[tokio::main]
async fn main() -> Result<(), Box<dyn std::error::Error>> {
    // Set up database connection
    let database_url = std::env::var("DATABASE_URL")
        .unwrap_or_else(|_| "postgresql://postgres:password@localhost/codex_memory_test".to_string());
    
    println!("Connecting to database: {}", database_url);
    
    let repository = MemoryRepository::from_url(&database_url).await?;
    
    // Test 1: Count total memories
    let total_stats = repository.get_statistics().await?;
    println!("Total active memories: {:?}", total_stats.total_active);
    
    // Test 2: Test temporal search with last_day range
    let now = Utc::now();
    let since_day = now - Duration::days(1);
    
    println!("Testing temporal search from {} to {}", since_day, now);
    
    let temporal_request = SearchRequest {
        query_text: None,
        query_embedding: None,
        limit: Some(100),
        offset: None,
        tier: None,
        tags: None,
        date_range: Some(DateRange {
            start: Some(since_day),
            end: None,
        }),
        importance_range: None,
        metadata_filters: None,
        similarity_threshold: None,
        search_type: Some(SearchType::Temporal), // This is what insights generation uses
        hybrid_weights: None,
        cursor: None,
        include_facets: None,
        include_metadata: Some(true),
        ranking_boost: None,
        explain_score: None,
    };
    
    let temporal_results = repository.search_memories(temporal_request).await?;
    println!("Temporal search results: {} memories found", temporal_results.results.len());
    
    // Test 3: Test semantic search with same date range (what what_did_you_remember uses)
    let semantic_request = SearchRequest {
        query_text: Some("conversation".to_string()),
        query_embedding: None, // Will be generated by search_memories
        limit: Some(100),
        offset: None,
        tier: None,
        tags: None,
        date_range: Some(DateRange {
            start: Some(since_day),
            end: None,
        }),
        importance_range: None,
        metadata_filters: None,
        similarity_threshold: Some(0.3),
        search_type: None, // Uses default search type
        hybrid_weights: None,
        cursor: None,
        include_facets: None,
        include_metadata: Some(true),
        ranking_boost: None,
        explain_score: None,
    };
    
    let semantic_results = repository.search_memories(semantic_request).await?;
    println!("Semantic search results: {} memories found", semantic_results.results.len());
    
    // Test 4: Test semantic search WITHOUT date range to see total searchable memories
    let no_date_request = SearchRequest {
        query_text: Some("conversation".to_string()),
        query_embedding: None,
        limit: Some(100),
        offset: None,
        tier: None,
        tags: None,
        date_range: None, // No date filter
        importance_range: None,
        metadata_filters: None,
        similarity_threshold: Some(0.3),
        search_type: None,
        hybrid_weights: None,
        cursor: None,
        include_facets: None,
        include_metadata: Some(true),
        ranking_boost: None,
        explain_score: None,
    };
    
    let no_date_results = repository.search_memories(no_date_request).await?;
    println!("Semantic search (no date filter): {} memories found", no_date_results.results.len());
    
    // Compare results
    if temporal_results.results.len() == 0 && semantic_results.results.len() > 0 {
        println!("\n❌ PROBLEM FOUND: Temporal search returns 0 results, but semantic search with same date range finds {} results", semantic_results.results.len());
        println!("This explains why insights generation finds 0 memories!");
    } else {
        println!("\n✅ Both search methods return similar results");
    }
    
    Ok(())
}